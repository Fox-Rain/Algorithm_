// DFS //
// 다차원 배열에서 각 칸을 방문할 때 깊이를 우선으로 방문하는 알고리즘 (BFS의 경우는 너비를 우선으로 방문함)

// DFS 과정 //                       **** 과정은 BFS와 같고 차이는 queue -> stack 인 것 뿐 
// 1. 시작하는 칸을 스택에 넣고 방문했다는 표시를 함
// 2. 상하좌우로 해당칸을 방문 안했으면 방문표시를 그곳에 남기고 스택에 삽입
// 3. 스택이 빌 때 까지 반복
// 모든 칸이 스택에 1번씩 들어가므로 시간복잡도는 칸이 N 개일 때 O(N)

// BFS vs DFS //
// 둘은 방문순서에서 큰 차이가 있다.
// BFS의 경우 퍼지는 것처럼 방문하지만 (*** 거리순으로 방문하게 됨  즉, 시작점에서 거리 1인거 다 방문하고, 2인거 다 방문하고 3인거다 방문하고..)
// BFS 특징으로 현재칸에서 인접한 칸은 1만큼더 떨어져있다는 성질이 성립
// DFS의 경우 한 쪽으로 쭉 방문하고 또 한쪽으로 쭉 방문하는 식이다. (*** 시작점에서 방향 정하고 쭉가고 다시 처음에서 방향 정하고 쭉가고...  한방향을 막힐 때까지 쭉)
// DFS의 경우 인접한 칸은 꼭 1만큼 더 떨어져있다는 성질이 성립 안할  떄가 있으므로, 거리를 구하는 경우 DFS는 사용하기 힘들다