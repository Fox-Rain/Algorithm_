// 재귀 // Recursion
// 재귀란?      하나의 함수에서 자기 자신을 다시 호출해 작업을 수행하는 알고리즘
// 재귀는 *** 귀납적으로 사고해야함.  처음부터 끝까지 과정을 보는것이 아닌, 몇몇의 과정을 보고 귀납적으로 추론해야함

// 재귀의 조건//
// 1. 특정입력에 대해선 자신을 호출하지 않고 종료해야함 (Base condition이 존재해야함)
// 2. 모든 입력은 결국에 Base condition으로 수렴해야한다
// 위의 조건을 만족하지 않을 경우       무한루프에 빠지게된다.

// 재귀 tip //
// 1. 함수를 명확히 정의해야한다. 함수 인자로 어떤것을 받을 것인지, 어디까지 계산하고 자기자신에게 넘겨줄 것인지를 명확히 해야한다.
// 2. 모든 재귀는 반복문으로 만들 수 있음  (재귀를 사용할 경우 코드가 간결해지나, 함수호출이 빈번해져서 메모리,속도에서 마이너스 일 수 있다.)
// 3. 한 함수가 자신을 여러번 호출하게 되면 비효율적일 수 있음  (계산이 중복되어서 일어나는 경우가 일어날 수 있음)
// 4. 재귀함수가 자기자신을 부를 때 스택 영역에 계속해서 누적된다.  따라서 큰 재귀를 사용하게 될 경우 스택의 메모리를 넘어서 런타임 에러가 발생할 수 있다.  



// *** 재귀 문제를 풀 때
// 1. 종료조건 설정하기
// ANCHOR 2. 그냥 해결하려면 어떻게 해야하는지 선언적으로 적어주기    (목점만 설정해준다.)         https://www.youtube.com/watch?v=uSSC0aKXbWQ